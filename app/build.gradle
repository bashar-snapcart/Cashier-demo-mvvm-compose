plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}
apply from: "../signing.gradle"
apply from: "../static-analysis.gradle"

def hasApiName = project.hasProperty("apiName")
def apiLabel = hasApiName ? apiName : "unknown"

def gitBranch = "git rev-parse --abbrev-ref HEAD".execute([], project.rootDir).text.trim().replace("/", "_")

def versionCodeValue = 1

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

android {
    namespace 'app.snapcart.cashier'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "app.snapcart.cashier"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode versionCodeValue
        versionName "$versionMajor.$versionMinor.$versionPatch"

        resConfigs "en", "in"

        def configs = loadProperties("$projectDir/config.properties")
        for (p in configs) {
            buildConfigField "String", "${p.key}", "\"${p.value}\""
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            buildConfigField "boolean", "HTTP_LOGGING_ENABLED", "true"
            signingConfig = signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "HTTP_LOGGING_ENABLED", project.hasProperty("http_logging").toString()
            minifyEnabled true
            shrinkResources true
            signingConfig = signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        staging {
            initWith release
            applicationIdSuffix ".staging"
            buildConfigField "boolean", "HTTP_LOGGING_ENABLED", "true"
            signingConfig = signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def version = variant.versionName
            def buildTypeName = variant.buildType.name
            outputFileName = "cashier-v${version}-${apiLabel}_api-${gitBranch}_branch-${buildTypeName}_build.apk"
        }
    }
}

dependencies {

    //core
    implementation "androidx.core:core-ktx:$androidx_core"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle"
    implementation "androidx.compose.material3:material3:$compose_material3"
    implementation "androidx.compose.material:material:$compose_material"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist"

    // compose
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Hilt(Dagger)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    // Work manager
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"

    // Fragment Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"

    // lib phone number
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.4'

}

kapt {
    correctErrorTypes true
}
